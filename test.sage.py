

# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_8 = Integer(8); _sage_const_10 = Integer(10); _sage_const_5 = Integer(5); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_9 = Integer(9); _sage_const_6 = Integer(6); _sage_const_7 = Integer(7); _sage_const_4 = Integer(4)
class PlanarMap:
	def __init__(self, sigma:Permutation, alpha:Permutation):
		self.sigma = sigma
		self.alpha = alpha
		self.phi = self.sigma.right_action_product(self.alpha)

	def __repr__(self):
		return "Sigma : " + str(self.sigma) + ", Alpha : " + str(self.alpha)



sigmaP = Permutation([(_sage_const_1 , _sage_const_8 , _sage_const_10 , _sage_const_5 , _sage_const_2 ), (_sage_const_3 , _sage_const_9 , _sage_const_6 , _sage_const_7 , _sage_const_4 )])
alphaP = Permutation([(_sage_const_1 , _sage_const_10 ), (_sage_const_2 , _sage_const_6 ), (_sage_const_3 , _sage_const_7 ), (_sage_const_4 , _sage_const_8 ), (_sage_const_5 , _sage_const_9 )])
P = PlanarMap(sigmaP, alphaP)


print(P.sigma.to_cycles())
print(P.alpha.to_cycles())
print(P.phi.to_cycles())
print(P)

print("Test")

